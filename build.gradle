buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = 1.7
targetCompatibility = 1.7

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    implementation 'net.sf.proguard:proguard-gradle:5.3.3'
    implementation 'com.android.tools.build:gradle:4.0.0'
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation "org.pantsbuild:jarjar:1.7.2"
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/sagiantebi/android-multilib-proguard")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
        maven {
            name = "MavenCentralStaging"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("SONATYPE_USER")
                password = project.findProperty("ossrhPassword") ?: System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
    publications {
        PluginPublisher(MavenPublication) {
            groupId project['group']
            artifactId project['name']
            version project['version']
            from components.java
            pom {
                name = 'A Gradle plugin which automates the procedures required to apply proguard to multiple android library projects'
                description = 'A concise description of my library'
                url = 'https://github.com/sagiantebi/android-multilib-proguard'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'sagiantebi'
                        name = 'Sagi Antebi'
                        email = 'sagiantebi@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/sagiantebi/android-multilib-proguard.git'
                    developerConnection = 'scm:git:ssh://github.com:sagiantebi/android-multilib-proguard.git'
                    url = 'https://github.com/sagiantebi/android-multilib-proguard'
                }
            }
        }
    }
}

signing {
    def signingKeyId = findProperty("signingKeyId")
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.PluginPublisher
}